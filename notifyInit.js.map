{"version":3,"sources":["node_modules/browser-pack/_prelude.js","lib/sw-notify-0.2.js","lib/utils-0.2.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","notifyInit","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","init","configObj","config","enable","console","log","Notify","utils","options","cache","name","maxAge","maxLimit","preCache","defaultHandler","navigationFallback","prototype","option","Object","keys","extendedOption","extend","validateOptions","notify_toolbox","handlerArray","requestTypeArray","extended","deep","arguments","toString","obj","prop","hasOwnProperty","isValidArray","isValid","push","validateHandler","validatePreCache","forEach","item","configOption","setDefault","setPattern","notify","router","default","getDefaultHandler","handler","indexOf","Array","isArray","validateRequestType","requestType","getDefaultCacheName","getDefaultMaxAge","maxAgeSeconds","getDefaultMaxLimit","maxEntries","getDefaultRequestType","debug","preCacheItems","__handler","pName","key","_requestType","_handler","_maxAge","_maxLimit","_cacheName","_origin","origin","_urlPattern","urlPattern","add","regex","cacheName"],"mappings":"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","file":"notifyInit.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","//    Copyright 2017 Satyam Singh (satyam0507@gmail.com) All Rights Reserved.\r\n// \r\n//    Licensed under the Apache License, Version 2.0 (the \"License\");\r\n//    you may not use this file except in compliance with the License.\r\n//    You may obtain a copy of the License at\r\n// \r\n//        http://www.apache.org/licenses/LICENSE-2.0\r\n// \r\n//    Unless required by applicable law or agreed to in writing, software\r\n//    distributed under the License is distributed on an \"AS IS\" BASIS,\r\n//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n//    See the License for the specific language governing permissions and\r\n//    limitations under the License.\r\n\r\n\r\n'use strict';\r\n\r\nvar utils = require('./utils-0.2');\r\n// var idbConfig = require('./idb-config');\r\n\r\nvar Notify = function () {\r\n\r\n    // default option \r\n\r\n    // @ option.cache ::- contain the default configuration about the cache\r\n    // @ option.cache.name ::- default name of the primary cache if not provided then 'notify-1'            \r\n    // @ option.cache.maxAge ::-  time in second after which response is will be consider fresh            \r\n    // @ option.cache.maxLimit ::- max limit of entries in the cache                             \r\n    //              \r\n    this.options = {\r\n        cache: {\r\n            name: 'notify-2',\r\n            maxAge: 604800,\r\n            maxLimit: 1000\r\n        },\r\n        // @ option.preCache ::- Array that contain urlPattern that will be precache at \r\n        //                       install phase of the service worker\r\n        preCache: [\r\n            \"/home\", \"/offline\"\r\n        ],\r\n        // @ defaultHandler ::- it is the default handler for the Requests \r\n        defaultHandler: 'networkFirst',\r\n        // @ navigationFallback ::- fallback page which will be served if both network and cache request fails\r\n        navigationFallback: '/offline' //todo link to our custom offline page\r\n\r\n    };\r\n\r\n}\r\n\r\nNotify.prototype.init = function (option) {\r\n\r\n    // chech if option object is avaliable and has keys\r\n    if (typeof option === 'object' && Object.keys(option).length >= 1) {\r\n\r\n        //object is valid and has keys\r\n\r\n        // extend the option with default option\r\n        var extendedOption = utils.extend(this.options, option);\r\n\r\n        if (utils.validateOptions(extendedOption)) {\r\n\r\n            console.log('option is valid');\r\n            this.options = extendedOption;\r\n            utils.notify_toolbox(extendedOption);\r\n\r\n        } else {\r\n            console.log('option is invalid');\r\n        }\r\n\r\n    } else {\r\n        // object is not valid or does not have keys\r\n        //  extend default values\r\n\r\n        console.log('initializing with default values');\r\n        option = this.options;\r\n        utils.notify_toolbox(option);\r\n    }\r\n\r\n}\r\n\r\nfunction init(configObj) {\r\n\r\n    if (configObj && typeof configObj === 'object') {\r\n        var config = configObj.config;\r\n        if (config && typeof config === 'object') {\r\n            if (config.enable || false) {\r\n                notifyInit(config);\r\n            } else { console.log('Cache API is not enabled'); }\r\n\r\n        } else {\r\n            console.log('config object is incorrect');\r\n        }\r\n    } else {\r\n        console.log('config not found');\r\n    }\r\n}\r\n\r\nfunction notifyInit(configObj) {\r\n    var notify = new Notify();\r\n    notify.init(configObj);\r\n}\r\n\r\nmodule.exports = {\r\n    init: init,\r\n}","//    Copyright 2017 Satyam Singh (satyam0507@gmail.com) All Rights Reserved.\r\n// \r\n//    Licensed under the Apache License, Version 2.0 (the \"License\");\r\n//    you may not use this file except in compliance with the License.\r\n//    You may obtain a copy of the License at\r\n// \r\n//        http://www.apache.org/licenses/LICENSE-2.0\r\n// \r\n//    Unless required by applicable law or agreed to in writing, software\r\n//    distributed under the License is distributed on an \"AS IS\" BASIS,\r\n//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n//    See the License for the specific language governing permissions and\r\n//    limitations under the License.\r\n\r\n'use strict';\r\n\r\nvar handlerArray = ['cacheFirst', 'cacheOnly', 'fastest', 'networkFirst', 'networkOnly'];\r\nvar requestTypeArray = ['get', 'post', 'put', 'delete', 'head'];\r\n\r\n\r\nvar extend = function () {\r\n\r\n\r\n    // Variables\r\n    var extended = {};\r\n    var deep = true;\r\n    var i = 0;\r\n    var length = arguments.length;\r\n\r\n    // Check if a deep merge\r\n    if (Object.prototype.toString.call(arguments[0]) === '[object Boolean]') {\r\n        deep = arguments[0];\r\n        i++;\r\n    }\r\n\r\n    // Merge the object into the extended object\r\n    var merge = function (obj) {\r\n        for (var prop in obj) {\r\n            if (Object.prototype.hasOwnProperty.call(obj, prop)) {\r\n                // If deep merge and property is an object, merge properties\r\n                if (deep && Object.prototype.toString.call(obj[prop]) === '[object Object]') {\r\n                    extended[prop] = extend(true, extended[prop], obj[prop]);\r\n                } else {\r\n                    extended[prop] = obj[prop];\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    // Loop through each object and conduct a merge\r\n    for (; i < length; i++) {\r\n        var obj = arguments[i];\r\n        merge(obj);\r\n    }\r\n\r\n    return extended;\r\n\r\n}\r\n\r\nvar validateOptions = function (option) {\r\n    var isValidArray = [];\r\n    var isValid = true;\r\n    isValidArray.push(validateHandler(option.defaultHandler));\r\n    isValidArray.push(validatePreCache(option.preCache));\r\n\r\n\r\n    isValidArray.forEach(function (item) {\r\n        if (!item) {\r\n            isValid = false;\r\n        }\r\n    })\r\n    return isValid;\r\n}\r\nvar notify_toolbox = function (configOption) {\r\n\r\n    //                var _defaultRequestType = 'any';\r\n    setDefault(configOption);\r\n    for (var keys in configOption) {\r\n        if (keys === 'urls') {\r\n            setPattern(configOption, null, 'urls');\r\n        }\r\n        if (keys === 'staticFiles') {\r\n            setPattern(configOption, 'cacheFirst', 'staticFiles');\r\n        }\r\n        if (keys === 'dynamicFiles') {\r\n            setPattern(configOption, 'networkOnly', 'dynamicFiles');\r\n        }\r\n    }\r\n\r\n    // add default handler if some request does not match\r\n    //                toolbox.router.default = toolbox[configOption.defaultHandler];\r\n    notify.router.default = notify[getDefaultHandler()];\r\n\r\n}\r\n\r\nvar validateHandler = function (handler) {\r\n\r\n    if (typeof handler === 'string' && handler.length) {\r\n        // handler is a valid string\r\n\r\n        // check if the value exist the handlerArray\r\n        if (handlerArray.indexOf(handler) !== -1) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    } else {\r\n        return false;\r\n    }\r\n\r\n\r\n}\r\n\r\nvar validatePreCache = function (preCache) {\r\n    return Array.isArray(preCache);\r\n}\r\n\r\nvar validateRequestType = function (requestType) {\r\n    if (typeof requestType === 'string' && requestType.length) {\r\n        if (requestTypeArray.indexOf(requestType) !== -1) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    } else {\r\n        return false;\r\n    }\r\n\r\n}\r\nvar getDefaultHandler = function () {\r\n    return notify.options.defaultHandler;\r\n}\r\nvar getDefaultCacheName = function () {\r\n    return notify.options.cache.name;\r\n}\r\nvar getDefaultMaxAge = function () {\r\n    return notify.options.cache.maxAgeSeconds;\r\n}\r\nvar getDefaultMaxLimit = function () {\r\n    return notify.options.cache.maxEntries;\r\n}\r\nvar getDefaultRequestType = function () {\r\n    var _defaultRequestType = 'any';\r\n    return _defaultRequestType;\r\n}\r\nvar setDefault = function (configOption) {\r\n    notify.options.debug = configOption.debug;\r\n    notify.options.cache.name = configOption.cache.name;\r\n    notify.options.cache.maxAgeSeconds = configOption.cache.maxAge;\r\n    notify.options.cache.maxEntries = configOption.cache.maxLimit;\r\n    notify.options.defaultHandler = configOption.defaultHandler;\r\n    notify.options.preCacheItems = configOption.preCache;\r\n    notify.options.navigationFallback = configOption.navigationFallback;\r\n}\r\nvar setPattern = function (configOption, __handler, pName) {\r\n\r\n    if (configOption.hasOwnProperty(pName)) {\r\n        for (var key in configOption[pName]) {\r\n            // console.log(url);\r\n            // check if the 'requestType' property is provided by the user for this url/express regex\r\n            // if not then we will default it to get() requestType\r\n            var _requestType = configOption[pName][key].requestType;\r\n            var _handler = configOption[pName][key].handler || __handler;\r\n            var _maxAge = configOption[pName][key].maxAge;\r\n            var _maxLimit = configOption[pName][key].maxLimit;\r\n            var _cacheName = configOption[pName].name;\r\n            var _origin = configOption[pName][key].origin;\r\n            if (pName === 'urls') {\r\n                var _urlPattern = key;\r\n            } else {\r\n                var _urlPattern = configOption[pName][key].urlPattern;\r\n            }\r\n\r\n            if (_requestType && validateRequestType(_requestType)) {\r\n                // yes  'requestType' property is present\r\n                // requestType[_requestType](_urlPattern, _handler, _maxAge, _maxLimit, _cacheName, _origin);\r\n                add(_urlPattern, _handler, _maxAge, _maxLimit, _cacheName, _origin, _requestType);\r\n            } else {\r\n                // no 'requestType' property is not present\r\n                //  fallback to default\r\n                // requestType[getDefaultRequestType()](_urlPattern, _handler, _maxAge, _maxLimit, _cacheName, _origin);\r\n                add(_urlPattern, _handler, _maxAge, _maxLimit, _cacheName, _origin, getDefaultRequestType());\r\n\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nvar add = function (regex, handler, maxAge, maxLimit, cacheName, origin, requestType) {\r\n    if (typeof regex === 'string' && regex.length) {\r\n        if (typeof origin === 'string' && origin.length) {\r\n            notify.router[requestType](\r\n                regex,\r\n                notify[handler] || getDefaultHandler(),\r\n                {\r\n                    'cache':\r\n                    {\r\n                        'name': cacheName || getDefaultCacheName(),\r\n                        'maxAgeSeconds': maxAge || getDefaultMaxAge(),\r\n                        'maxEntries': maxLimit || getDefaultMaxLimit()\r\n                    },\r\n                    'origin': origin\r\n                }\r\n            )\r\n        } else {\r\n            notify.router[requestType](\r\n                regex,\r\n                notify[handler] || getDefaultHandler(),\r\n                {\r\n                    'cache':\r\n                    {\r\n                        'name': cacheName || getDefaultCacheName(),\r\n                        'maxAgeSeconds': maxAge || getDefaultMaxAge(),\r\n                        'maxEntries': maxLimit || getDefaultMaxLimit()\r\n                    }\r\n\r\n                }\r\n            )\r\n        }\r\n    } else {\r\n        console.log('not a valid regex');\r\n        return;\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nmodule.exports = {\r\n    extend: extend,\r\n    validateOptions: validateOptions,\r\n    notify_toolbox: notify_toolbox\r\n}"]}